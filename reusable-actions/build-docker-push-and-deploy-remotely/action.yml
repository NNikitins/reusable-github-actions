name: Build docker image and deploy remotely
description: 'Build docker image, push to docker hub, pull on a remote server and deploy'

inputs:
  docker-container-name:  # id of input
    description: 'Name of the docker container'
    required: true
  branch:
    description: 'Branch name. Currently is used only latest'
    required: false
    default: "latest"
  docker-port:
    description: 'Port of the container'
    required: true
        
outputs:
  nuget-package-version-number:
    description: "Nuget Package Version"
    value: ${{ steps.get-version-for-nuget.outputs.nuget_version_number }}

runs:
  using: "composite"
  steps:
  - name: Login to DockerHub
    run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
    shell: cmd
      
  - name: Build image
    run: docker build . --file DockerfileWindows --tag ${{ secrets.DOCKER_USER }}/${{ inputs.docker-container-name }}:${{ inputs.branch }}
    shell: cmd
    
  - name: Docker push
    run: docker push ${{ secrets.DOCKER_USER }}/${{ inputs.docker-container-name }}:${{ inputs.docker-container-name }}
    shell: cmd
      
  - name: Deploy
    run: .\powershell-scripts\remote-deployment.ps1 -machine_name ${{ secrets.WIN2016SERVER_MACHINE_NAME }} -user_password ${{ secrets.WIN2016SERVER_PASSWORD }}  -username ${{ secrets.WIN2016SERVER_USERNAME }} -docker_username ${{ secrets.DOCKER_USER }} -docker_password ${{ secrets.DOCKER_PASSWORD }} -docker_branch ${{ inputs.branch }} -docker_container ${{ inputs.docker-container-name }} -docker_port ${{ inputs.docker-port }} -docker_registry ${{ secrets.DOCKER_REGISTRY }}
    shell: powershell
      